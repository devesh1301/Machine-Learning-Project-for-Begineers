Courses,Course_Contents
AI & ML Training,"Why we require AI and ML? Problem with traditional Software systems Opportunities with AI,ML What you need to excel - only a logical mind!! Tools and Software to efficiently build ML models Why R and Python(with Tensorflow) is very popular ? Understand what actually is a ML model How to handle data Preprocessing data Types of ML models - Supervised and Unsupervised A peek into Reinforcement Learning How to break your data into Training and Test Cross validation techniques Understand Linear Regression Gradient Descent Do actual hands on and understand the calculations behind Gradient Descent Brush up on Differentiation to understand the maths behind the hands on Code both in R and Python Learn how to improve your model Overfitting is one of the most difficult aspect to learn while building a ML model Use the above Linear Regression model to understand Overfitting Learn with Hands on - how to avoid Overfitting Bias Variance Tradeoff Regularization - Ridge, LASSO ANOVA, F tests Logistic Regression Understand CLassification with Logistic Regression Maximum Likelihood Estimation Build an end-end model with Logistic Regression using scikit Learn Hands on - how actually you will build a model in the Industry How to code for Interviews, Data Science Competitions What is a Probability based model and why Decision Tree is such a model? Understand the concepts of Entropy, Gini Impurity, Information Gain Do a detailed hands on project to predict the possible Loan Defaulters for a large multi-national bank Apply the concepts of Overfitting How to improve the Decision Tree model without Overfitting Bagging, Boosting Random Forest AdaBoost, Gradient Boost Understand a Distance based model with kNN how to choose the value of k Project work on Predicting Breast Cancer The power of SVM and what it can do which other models cannot Why SVM is so popular in the industry Learn all about Kernel Functions Different Kernel functions Build an OCR(Optical Character Reader) with the help of SVM and Kernel functions Neural Networks Why Neural Networks can actually solve any Complex pattern? How to build the Neural Network Architecture How Neural Network mimics the cognitive capabilities of humans Build your own AND,OR,NOT,XOR,XNOR Logic Gates with Neural Network Understand Forward & Backward Propagation Plot a Neural Network with code and map your understanding between theory and practical Change the architecture with code and see how the Neural Network behaves Different Activation Functions Vanishing Gradient problem Loss functions Optimization methods Gradient Descent with Momentum, RMSProp, ADAM Learning Rate Decay Xavier Initialization Introduction to Keras and Tensorflow(TF) Deep Learning in Keras with TensorFlow as the backend Project Work Basic concepts of Clustering k-means Clustering Hierarchical clustering Build a hands on project to do Social Media analysis with Clustering Principal Component Analysis(PCA) Learn the maths behind PCA Learn how to code and plot a PCA Recommendation Engine Understand how Netflix or any other Tech giant uses Recommendation Engine Content and Collaborative Filtering Pros and Cons of different approaches of Recommendation Engine Market Basket Analysis Apriori Rules Build your own Recommender System Image Detection, Image Classification, Localization Introduction to Convolutional Neural Networks(CNN) Build a Handwritten Digit recognizer with CNN Strides, Padding concepts Convolutional, Padding and Fully Connected layers Sliding Window Edge Detection YOLO ALgorithm - You Only Look Once Introduction to classical networks like LeNet5 IoU Build an Image Classifier with CNN Data Augmentation Techniques Natural Language Processing(NLP) Introduction to Natural Language Processing(NLP) Text Preprocessing Lemmatization, Stemming Syntactical Parsing, Entity Parsing CTopic Modelling with Latent Dirichlet Allocation(LDA) Collapsed Gibbs Sampling Word Embedding with Word2Vec - CBOW and SkipGram models Restricted Boltzman Machines Recurrent Neural Network(RNN) and Long Short Term memory(LSTM) Build a chatbot with the above concepts of NLP and Neural Networks History of AI State of the Art AI Types of Agents Types of Environments Asymptotic Notations Uninformed Search-Breadth first search Uniform Cost Search Depth First Search Depth-Limited Search Iterative Deepening Depth-First Search Bidirectional Search Informed Search-Greedy Best-First Search A* Search Beyond Local Search-Hill Climbing Simulated Annealing Beam Search Genetic Algorithms Online Search Informed Search Min-max Tree Alpha-Beta Pruning Move Ordering Stochastic games Constraint Satisfaction Problems Map coloring Sudoku Job scheduling Constraint Propagation Backtracking Passive Reinforcement learning Active Reinforcement learning Policy Search Mock Interview 1 Mock Interview 2 Mock Interview 3 Mock Interview 4"
Machine Learning,"Introduction to Big Data and Machine Learning Understanding Python and R   Types of Learning Advice for Applying Machine Learning Machine Learning System Design   Basics of Statistics Data cleaning Data Exploration Statistical Inference PGM (Probabilistic graphical model)   Regression Simple linear regression Multiple linear regression Assessing performance Ridge Regression Features selection and lasso Nearest neighbours and kernel regression Classification Decision Trees and CART Support Vector Machines(SVM) Naive Bayes Project work - Cancer Detection, Fraud Analysis, Spam Filter creation   Clustering Overview Types of Clustering Types of Clustering Algorithms K Means Clustering Hierarchical Clustering Difference between K Means and Hierarchical clustering Applications of Clustering Project Work: Social Media Analysis with Clustering   Recommender System Overview Phases of Recommendation Process Recommendation filtering Techniques Evaluation metrics for recommendation Algorithms   Spark Core Spark Architecture Working with RDDs Machine learning with Spark – Mllib   The Perceptron learning procedure The back propagation learning procedure Learning feature vectors for words Object recognition with neural nets Optimization: How to make the learning go faster Recurrent neural networks More recurrent neural networks Ways to make neural networks generalize better Combining multiple neural networks to improve generalization Hopfield nets and Boltzmann machines Restricted Boltzmann machines (RBMs) Stacking RBMs to make Deep Belief Nets Deep Learning   Convolutional Neural Network(CNN) Object Detetcion Object Classification Localization Edge Detection Stride, Padding YOLO algorithm   Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4"
Angular 2,"Introduction to Single page application Development. How Angular is opinionated. Angular Vs React Vs VueJs vs Ember. Angular as a framework vs react as a library. TypeScript Introduction to npm. Angular and npm Ecosystem. Evaluation Quiz 1 Installing Angular CLI. package.json and building app using npm and package.json. >Introduction to Angular Modules. Understanding base modules and application initializer. How modules help create modular and decoupled application. Understanding Angular Components. Create Basic component and display in the view. How component help to create organized application using custom tags. Using root component to initialize application. Evaluation Quiz 2 Angular Bootstrapping. Angular CLI Directory structure. .angular-cli.json file. main.ts as main application file. Creating multiple modules. Working with .module file. Understanding production and dev environments. Scope inheritance in Controllers. Using conditional statements *ngIf using Template modifier directives looping through data using *ngFor Understanding data bindings Working with different data binding and interpolations How to create components using CLI and regular Code Using imports in angular files Using decorators in Angular @Component decorator Using templates for html Using css files for components Constructor for components ngOnInit for initializations Evaulation Quiz 3 Creating components inside modules Passing data to components using @Input Attaching events in templates Working with ngModel Passing data outside components using Event Emitters Component Hooks, Different component hooks, their use Components lifecycle, Understanding how component is created, attached and destroyed Inter Component communication. How components can talk to each other. Using Pipes in Angular Inbuilt pipes in Angular Working with Currency Pipe Working with Date Pipe Lower and upper case pipe Json pipe for debugging Creating custom pipe through CLI @Pipe Decorator Using Transform function to transform response Creating custom pipe with multiple arguments Evaluation Quiz 4 Introduction to services Services as singletons Understanding dependency injection of Angular Service as a way to organize logic and data services Creating service using CLI and with custom code Working with @Injectable() decorator Organizing services in Project Code Working with inbuilt directives Introduction to custom directives API Creating custom directive through CLI @Directive Decorator Creating custom directive through Code Create directive to modify HTML and View ElementRef API Renderer API Creating events in custom directive using @HostListener Evaluation Quiz 5 Working with ngModel Template variable in Angular using # Template vars vs NgModel Creating forms and working with form events Collecting and handling form data Form validations Reactive forms vs template forms Introduction to reactive forms Creating form controls in code using Using FormGroup, FormControl, FormBuilder API Creating dynamic controls using FormsGroup and FormsControla Form validations using validator functions Validators, AbstractControl, ValidatorFn Form validation using directives as better approach Handling events in Forms Evaluation Quiz 6 Understanding Observables and subscribers Introduction to RXJS library Map function Introduction to REST Services Using GET,POST,PUT,DELETE Why we need rest services vs traditional AJAX approach Difference between httpmodule vs httpclient Using http module to connect to server and getting data Sending custom headers in angular frontend using Header Class RequestOptions class in Angular Creating a REST App using http module for CRUD operations Using HTTPclient to talk to server Create entire REST APP using HTTPClient Module Using Interceptors Securing Server Communications Evaluation Quiz 7 Introduction Unit testing Setting up unit testing using Karma Creating unit tests for components creating unit tests for services Evaluation Quiz 8 Authentication Using JWT Securing Angular Application Protecting against Attacks Deploying Angular Application Working with dist folder AOT Compilation Optimizing Angular App in Production Mock Interview 1 Mock Interview 2 Mock Interview 3 Mock Interview 4"
ReactJS Training,"Introduction to ES2015 (ES6) Webpack / Babel / NPM Project structure   First React App ES6 Introduction The Role Of React and the problems React addresses React Development Environment (node, npm, Webpack, Babel, Babel presets) JSX   React Components Virtual DOM Change detection One way data binding Components with and without state. Classes vs. Functions React Components, Elements, and Instances JSX and React.createElement Component Lifecycle   Using props for data passing Internal state Class Components Refs & Input handling Creating react app   Passing Props Initializing State Updating State Parent and Child Components   Main components: Router, Route, IndexRoute Authentication Handling event and react router Implement react-router in a master-detail web application   Presentational Components vs. Container Components Data fetching   Controlled Components vs. Uncontrolled Components   MaterialUI   Data and behaviour Data in, data out Mutations Pure functions   Redux Architecture philosophy Single Immutable State Pure and impure functions Integration with React (Provider)   Store, Reducers, Actions Unique source of truth   Provider connect Application using react and redux   Fetching data from the server to Redux   Introducing the Redux middleware Exercise, build your own Redux middleware Thunks. Actions that dispatch actions Exercise, implement loading indicators using thunks   Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4"
Mean Stack,"Introduction to Single page application Development. How Angular is opinionated. Angular Vs React Vs VueJs vs Ember. Angular as a framework vs react as a library. Introduction to npm. Angular and npm Ecosystem. Evaluation Quiz 1 Installing Angular CLI. package.json and building app using npm and package.json. >Introduction to Angular Modules. Understanding base modules and application initializer. How modules help create modular and decoupled application. Understanding Angular Components. Create Basic component and display in the view. How component help to create organized application using custom tags. Using root component to initialize application. Evaluation Quiz 2 Angular Bootstrapping. Angular CLI Directory structure. .angular-cli.json file. main.ts as main application file. Creating multiple modules. Working with .module file. Understanding production and dev environments. Scope inheritance in Controllers. Using conditional statements *ngIf using Template modifier directives looping through data using *ngFor Understanding data bindings Working with different data binding and interpolations How to create components using CLI and regular Code Using imports in angular files Using decorators in Angular @Component decorator Using templates for html Using css files for components Constructor for components ngOnInit for initializations Evaulation Quiz 3 Creating components inside modules Passing data to components using @Input Attaching events in templates Working with ngModel Passing data outside components using Event Emitters Component Hooks, Different component hooks, their use Components lifecycle, Understanding how component is created, attached and destroyed Inter Component communication. How components can talk to each other. Using Pipes in Angular Inbuilt pipes in Angular Working with Currency Pipe Working with Date Pipe Lower and upper case pipe Json pipe for debugging Creating custom pipe through CLI @Pipe Decorator Using Transform function to transform response Creating custom pipe with multiple arguments Evaluation Quiz 4 Introduction to services Services as singletons Understanding dependency injection of Angular Service as a way to organize logic and data services Creating service using CLI and with custom code Working with @Injectable() decorator Organizing services in Project Code Working with inbuilt directives Introduction to custom directives API Creating custom directive through CLI @Directive Decorator Creating custom directive through Code Create directive to modify HTML and View ElementRef API Renderer API Creating events in custom directive using @HostListener Evaluation Quiz 5 Working with ngModel Template variable in Angular using # Template vars vs NgModel Creating forms and working with form events Collecting and handling form data Form validations Reactive forms vs template forms Introduction to reactive forms Creating form controls in code using Using FormGroup, FormControl, FormBuilder API Creating dynamic controls using FormsGroup and FormsControla Form validations using validator functions Validators, AbstractControl, ValidatorFn Form validation using directives as better approach Handling events in Forms Evaluation Quiz 6 Understanding Observables and subscribers Introduction to RXJS library Map function Introduction to REST Services Using GET,POST,PUT,DELETE Why we need rest services vs traditional AJAX approach Difference between httpmodule vs httpclient Using http module to connect to server and getting data Sending custom headers in angular frontend using Header Class RequestOptions class in Angular Creating a REST App using http module for CRUD operations Using HTTPclient to talk to server Create entire REST APP using HTTPClient Module Using Interceptors Securing Server Communications Evaluation Quiz 7 Introduction Unit testing Setting up unit testing using Karma Creating unit tests for components creating unit tests for services Evaluation Quiz 8 Authentication Using JWT Securing Angular Application Protecting against Attacks Deploying Angular Application Working with dist folder AOT Compilation Optimizing Angular App in Production Introduction what is Node.JS Importance of being asynchronous Asynchronous Javascript Node.JS event loop Node.JS process file system FS module Reading directories Reading Files Streaming Building servers Creating servers with HTTP Receiving data HTTP streaming Working with TCP CommonJS Modules npm Packages The Event Emitter API Nodemon Nodemailer Socket.io Cryptography Session Handling Cookie Handling Authentication Connecting with Slack App Introduction to ExpressJS Routing Configuration Views Middleware Working With Data Working With Socket.io Processes and cluster Child Process Module Why clusters The cluster object The worker object Best Practices NPM Node.js API design Error Handling Debugging Hosting Node Why do we need hosts Forever PM2 Node on Windows Node as a Windows Service IISNode Unit testing Exception Handling Unit Testing Event Loops Rest API Token Based Authentication Using JWT Promises Closures Prototyping Introduction to MongoDB Create database Create table Insert into Select from query Mongo sort Mongo delete Drop UPDATE Limit JOIN Advance concepts of MONGO Map Reduce MongoDB (nosql database) MongoDB with NodeJS Hands-on application Chat Application Book My Show App Mock Interview 1 Mock Interview 2 Mock Interview 3 Mock Interview 4"
Spring & Hibernate,"CSpring Framework, IoC, Dependency Injection Spring Containers : BeanFactory, ApplicationContext XmlBeanFactory, ClassPathXmlApplicationContext,FileSystemXmlApplicationContext Spring scope : singleton and prototype Bean Life Cycle : setup and tear down, init-method and destroy-method BeanPostProcessor Spring Bean definition inheritance Dependency Injection: Through Constructor, setter method Injecting Collection, inner bean Bean Autowiring: by name, by type, by constructor Annotation : Injection required true/false Autowiring : setter, property, constructor, qualifier, Component, life cycle Spring Wiring, loose coupling    JDBCTemplate\xa0update, queryForObject PreparedStatementCreator PreparedStatementSetter DataSource    Advices: Before, After returning, After throwing, Around   Practical Session   Model-Vew-Controller Controller, command class, validator FormController ExceptionResolver, ViewResolver MVC annotations: @Controller, @RequestMapping, @ExceptionHandler   ORM, JDBC to hibernate transition, POJO to DB mapping Hibernate Config file, class annotation , associations Persistence Session, SessionFactory, Transaction Spring and Hibernate   Java Persistence API Entities Primary Key, Persistent Fields in Entities Entity Inheritance Entity Manager Managing Entities JPQL   Service-Oriented Architecture XML, SOAP over HTTP Web Services Description Language WSDL Universal Description, Discovery and Integration Representational State Transfer - RESTful Webservices    Practical Session   Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4"
Python & Django,"Introduction to the Python programming language Introduces Python's basic data types, files, functions, and error handling. Basic Python syntax Reading and Converting User Input, Calculating with Stored Values  Running a Python script , python scripts on Unix and Windows Python Editors and IDE Language Components. (Control flow and Syntax, Intending, if statement , relational operators , logical operators , true or false, Bite Wise Operators , while loop , break and continue , for loop)   Collections (Introduction , Lists , Tuples , Sets , Dictionaries , Sorting Dictionaries , Copying Collections , Summary String Formatting and String Operations Writing Lists and Tuples Functions for Sequences Some Other Functions and Methods to Work with Sequences Slices With a Stride: Skipping Around Sequences Manipulating Lists and Tuples List comprehensions Dicts Working With \xa0Dicts Applying Dicts: Counting Words A More Complex Application: Word Pair Frequencies   Reading and Writing Files(Flat files, CSV files, Excel files, \xa0JSON files) Appending to a File and Seeking to Arbitrary Positions Parsing Techniques for large files   Installing different inbuilt packages and modules as per the project requirement(pywinauto, pywin32, pyodbc-3.0.2.win-amd64-py2.7, MySQL-python, ftputil-2.2.3, PY2EXE) Standard modules(Importing Module , Math Module , Random Module , Packages , Composition ) Functions (Parameters , Functional Documentation , Keyword and Optional Parameters , Passing Collections to a Function , Variable Number Of Arguments , Scope , Passing Functions to a Function) Mapping Functions in a Dictionary , Lambda , Closures Variable scope and Returning Single Values, Multiple values   Handling different Error and Exception to achieve a hassle free Automation Handling Multiple Exceptions The standard exception hierarchy Using Modules RAISE ASSERT  Writing your own exception classes Designing a Custom logger mechanism to record the automation script flow Launching external programs  Operating System related task(STDIO,All System command), Walking Directory, Random Numbers, Dates and Times   Introduction To python Classes Defining Classes , Initializes Instance Methods, Properties Class methods and data , Static methods , private methods and Inheritance\xa0 Polymorphism Threads and processes The Threading Library Module Thread synchronization The queue Standard Library The multiprocessing Library Module   The Environment Launching Commands and Creating a process Directory Commands  Miscellaneous OS Calls and Walking through Directories Network programming and Introduction  The Client and server Program Evaluation Client and Server   Working with various secured third party APIÔÇÖs through python An intro about Relational Database and No SQL Database(MySQL, \xa0Mongo DB) CRUD Operations Use of Inbuilt database modules for MySQL Alerting E-mails for Critical monitoring services through pythons Creating database project   Django Installation Required modules installation   Creating project and apps Using Django dev server for development Creating first Web App with Django   Designing URLs Writing handler views Exception Handling   Exposing HTTP REST APIs  Handling client HTTP GET, POST, PUT, UPDATE, DELETE requests Processing data from files and providing as JSON over HTTP   Creating and activating models Information insertion, retrieval, updation and deletion using Django Object relation mapping (ORM) and exposing as JSON data   Activating Admin Module Managing Users and Permissions Session Handling Building custom UI for our Apps using Admin module   Hosting client side code written using AngularJS Integration of client side code with server side    Django Logging for debugging purposes   Testing client APIs   Deploying an Django Application on the Cloud   Elastic Search  Kibana  Data Analytics    Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4"
Web Development,"HTML5 History/Timeline HTML5 Design Principles What is (and is not) HTML5 HTML Review Doctype Root Element Element   Content Models New Structural Elements HTML4/HTML5 Comparison Other New Elements Redefined Elements Obsolete Elements HTML5 Outlines When Can I Use It? Feature Detection: Techniques Feature Detection: Examples Feature Detection: Modernizr CSS Styling CSS Validating Accessibility (WAI-ARIA)   HTML5 Forms Overview New Input Types: Contact Info New Input Types: Native Date Picking Operas Rendering of Date Input Types New Input Types: Number and Range New Attributes Detecting Support Accessibility (WAI-ARIA) Styling Form Elements Avoiding Validation The Constraint Validation API Custom Validation Example   Audio and Video Element Using the Media Elements Attributes Formats Serving Device-Specific Files Accessibility Backwards Compatibility Media API Rolling Custom Controls   Canvas Overview The Canvas Element The 2D Context The Coordinate System Rectangles Paths Paths, Drawing Methods Curves and Arcs Colors and Styles   Geolocation Overview Privacy Concerns API Methods API Attributes Using the Geolocation API:Success Handlers Using the Geolocation API: Error Handlers Using the Geolocation API: The Third Argument watchPosition() and clearWatch() Fallback Support: Geo.js   Local Data Storage Overview Web Storage Overview Web Storage API Data Types JSON (JavaScript Object Notation) Accessing Storage The Storage Event Database APIs   Web Workers Overview What Can You Do with a Worker?  Message Passing Shared Workers: The Parent Page   Latest standards of CSS3  Why CSS3? What is CSS? Border radius  Box shadow Text shadow  Transitions  Transforms Gradients Multiple backgrounds  Font face   Introduction  Installing bootstrap Creating first page using bootstrap Bootstrap container Bootstrap Grid System Example for Grid System Clearfix Nested Columns Typography Handling Tables Form Handling Horizontal Form  Vertical Forms Inline Forms Input Controls Icons Form Element Buttons Form Validation  Handling Images Navigation Items and Dropdown Navbars Modals Carousels   Introduction to JavaScript  Basic Rules Dot Notation Square Bracket Notation   Methods Properties The Implicit window Object The getElementById() Method Event Handler   JavaScript Variables A Loosely-typed Language Storing User-Entered Data Arrays Declaring and using Arrays Associative Arrays Understanding Controllers Boundary and Scopes Array Properties and Methods JavaScript Operators   JavaScript Built-in Functions Number(object) String(object) isNaN(object)parseFloat() and parseInt()   A Comparison   Passing Values to Functions A Note on Variable Scope Returning Values from Functions A comparison   String Object Math Object Date Object, Uses Using the type of Operator   If - else If - else Conditions Switch / Case while Loop Syntax do while Loop Syntax for Loop Syntax for in Loop Syntax   Understanding DOM DOM Tree Traversing the DOM Accessing DOM Elements Modifying DOM Elements Using JavaScript Accessing Form Data The this Object Cleaner Validation Validating Radio Buttons Validating Checkboxes Validating Select Menus Focus, Blur, and Change Events Change Validating Text areas   Introduction to AngularJS How AngularJS is opinionated AngularJS Components and Architecture   Creating Boundaries using ng-app Model View Controller Templates and Data Binding Repeating elements in templates Using Expressions, CSS Classes and Styles Using Controllers for UI responsibility separation Understanding Controllers Boundary and Scopes Scope inheritance in Controllers Responding to model changes Working with inbuilt directives   Filters Overview Understanding Filter Expressions Building custom Filters Implementing filters and custom filters in example Understanding Built-in Directives   Understanding routing in AngularJS Using ngRoute Module Creating routes Passing parameters to Routes   Creating a simple E Commerce Front End Page using AngularJS.   Dependency Injection Services, Factories and providers Modularity using Services Injecting Services Creating Custom Factories and Providers Creating example using services   Directives Overview Creating Directives The Directive Definition Object Compilation and Linking Creating Components Implementing directives in the example app   Understanding server communicating with angular Communicating over $http   Installation and configuration Apache administration Virtual hosts and aliases Directory protection and CGI Apache Modules Common Apache Modules Apache Config files and variables Overwriting Config values using .htaccess file User webpages   Wamp Installation Wamp components Configuring Apache in Wamp Configuring PHP in Wamp MYSQL basic configuration Upgrading and downgrading versions in wamp   Hands-on Session   Installing development environ with PHP, MySQL and Apache Post install configuration of PHP.ini file for enabling and disabling features Important tags in PHP.ini file Understanding httpd.conf file for fine tuning apache. Environmental security considerations on Unix/Linux Exercise and project   Defining arrays in PHP List Hashes Use of lists, arrays and hashes Extracting array elements in a loop Catching list elements in separate variables using split() and list() Extracting hash elements in loop using values() Extracting hash keys in a loop using keys() Extraction values and keys using value=>key syntax Serializing and un-serializing arrays and hashes Storing arrays in disk files and using later. Passing arrays as references and values to a function Array function: array_split, array_chunk, array_count_values, array_fill, array_key_exists, array_pop, array_push etc. Merging arrays   Basic Defining a PHP Class Constructor Default constructor and destructor in PHP 5 Public , Private and protected variables Including external class files Function Overloading Inheritance Example of class using a sample User class RequireÔÇØ, ÔÇ£includeÔÇØ and ÔÇ£include_onceÔÇØ   Hands-on Session   Auto loading class objects Using static keyword in classes Scope resolution Class Constant Abstract class concept and demo Interfaces concept and demo Object Iteration Patterns Magic Methods Using ""final"" keyword Object Cloning   Basics Pre-defined variable Variable Scope Using ""global"" keyword $GLOBALS   Writing user defined functions Many different ways to write PHP functions Passing arguments Returning values Returning Multiple Values Default parameters and precautions Filesystem : basename, copy, dirname, fopen, fread, fwrite, foef, fclose, fgets, file, filesize, fputs, is_dir, is_file, is_executable, stat Strings: trim, echo, explode, fprintf, implode, join, md5, str_word_count, strlen, substr, substr_replace, wordwrap HTTP: header, base64_encode, base64_decode, parse_url, urlencode, urldecode File upload: POST method uploads, error messages Mathematical functions: abs, sin, cos ,tan, pi, pow, min, max, log, log10, hexdec, exp, deg2rad, rad2deg, srand, rand, round, is_nan, is_infinite, is_finite, fmod, floor, ceil, sqrt   Variables Concept of reference in PHP How references are used How references are NOT used Passing a references Returning a reference Unsetting a defined reference Spotting references   Understanding forms and input fields Reading form variables in PHP using POST method Reading from variables in PHP using GET method Carrying values from one page to another using QUERY_STRING PHP sessions and cookies   Concept of database abstraction Implementing a DB class with MYSQL example Making database queries using implementing DB class Changing DB class to work with SQLite   Understanding AJAX Using PHP with AJAX Using JavaScript to pass variables to PHP Using PHP to render JavaScript Demo of login from using PHP and AJAX Passing variables to PHP from JavaScript and Vs- an another approach using cookies   Implementing working SOAP client and server (using nuSOAP) Implementing working XML RPC client and server (using PEAR) Practice of web services by writing new working services.   Introduction to frameworks Introduction to MVC design pattern Working with controllers View Understanding Templating   Introduction to MVC design pattern Introduction to Laravel Understanding composer Installing laravel Understanding laravel directory structures  Creating starter app using laravel Working with database migrations Understanding controllers in laravel Working with controllers Understanding views in laravel Creating a view class Understanding models  Creating a model class Working with blade templates Understanding Test Driven development Writing tests for Laravel Applications Creating a complete MVC flow with controller, view and model Understanding REST Services Implementing REST services in Laravel   Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4"
Complete Java,"Java OOPS concepts, need for Java Classes and interfaces Objects, Constructor, fields, methods, variables, keywords Inheritance, method overloading and overriding, access specifiers jar file Package, comparing and printing objects final variable and initializing Bitwise operations, operators, data types Generic types, Date, Calendar Inner, anonymous classes String, String Buffer,\xa0arrays, switch statement Exception, Reflection, Clone, Assertion File Handling, io package classes Enum type Multi-threading, concurrency Data structures, Collection framework, sorting   JDBC, SQL, database concepts, drivers   Servlets, Webserver, http methods JavaServer Pages(JSP), JSTL Java Cryptography, encryption Java mail, cryptographic protocols JMS XML   CSpring Framework, IoC, Dependency Injection Spring Containers : BeanFactory, ApplicationContext XmlBeanFactory, ClassPathXmlApplicationContext,FileSystemXmlApplicationContext Spring scope : singleton and prototype Bean Life Cycle : setup and tear down, init-method and destroy-method BeanPostProcessor Spring Bean definition inheritance Dependency Injection: Through Constructor, setter method Injecting Collection, inner bean Bean Autowiring: by name, by type, by constructor Annotation : Injection required true/false Autowiring : setter, property, constructor, qualifier, Component, life cycle Spring Wiring, loose coupling    JDBCTemplate ÔÇô update, queryForObject PreparedStatementCreator PreparedStatementSetter DataSource    Advices: Before, After returning, After throwing, Around   Practical Session   Model-Vew-Controller Controller, command class, validator FormController ExceptionResolver, ViewResolver MVC annotations: @Controller, @RequestMapping, @ExceptionHandler   ORM, JDBC to hibernate transition, POJO to DB mapping Hibernate Config file, class annotation , associations Persistence Session, SessionFactory, Transaction Spring and Hibernate   Java Persistence API Entities Primary Key, Persistent Fields in Entities Entity Inheritance Entity Manager Managing Entities JPQL   Service-Oriented Architecture XML, SOAP over HTTP Web Services Description Language ÔÇô WSDL Universal Description, Discovery and Integration Representational State Transfer - RESTful Webservices    Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4"
JavaScript Training,"Introduction to JavaScript Basic Rules Dot Notation Square Bracket Notation   Methods Properties The Implicit window Object The getElementById() Method Event Handler   JavaScript Variables A Loosely-typed Language Storing User-Entered Data Arrays Declaring and using Arrays Associative Arrays Array Properties and Methods JavaScript Operators   JavaScript Built-in Functions Number(object) String(object) isNaN(object)parseFloat() and parseInt()   A Comparison   Passing Values to Functions A Note on Variable Scope Returning Values from Functions A comparison   String Object  Math Object Date Object, Uses Using the type of Operator   If - else If - else Conditions Switch / Case while Loop Syntax do while Loop Syntax for Loop Syntax for in Loop Syntax   Understanding DOM DOM Tree Traversing the DOM Accessing DOM Elements Modifying DOM Elements Using JavaScript Accessing Form Data The this Object Cleaner Validation Validating Radio Buttons Validating Checkboxes Validating Select Menus Focus, Blur, and Change Events Change Validating Text areas   Understanding Classes Creating Class Variables Public and private variables Class Members Public vs. Private members in JavaScript Inner functions vs. Class Members Using the Object Context this Creating class Templates using JavaScript   Understanding Constructors creating objects using constructors Object creation by constructors vs. literals Literals vs. Constructors   Understanding Class properties Creating properties in Class Accessing properties outside the class using Objects public properties,/li> Private properties Specific use cases of private properties   Understanding Methods or functions in classes Creating methods Accessing Methods outside classes Public vs. private methods Using public methods outside the class private methods use cases Class specific computation using private methods   Understanding inheritance in JavaScript Implementing inheritance in JavaScript Single vs. multiple inheritance in JavaScript Prototypal inheritance Restricting Inheritance   Understand objects in JavaScript Creating Objects Using Literals Creating Objects Using Constructor Function Understanding this Creating Inner functions and using as member variables Object Initialization vs. literals   Understanding the object context inside member functions Using apply Using apply to transfer context Object Context in Class functions   Understanding variable declaration How declaration is diff from C type languages Variable hoisting Function variable hoisting Scenarios   Understanding functions as variables in JavaScript Immediate functions Using immediate functions for clean global namespace Using Namespaces in JavaScript Anonymous function applications Assigning value to function variables Closures Closures Applications  Closures in Loop Scope Chain Getters and setters Iterators Eval()   Understanding Prototype Enumerable properties Iterating through Properties Understanding proto The proto chain Proto Hierarchy Browser Environments and proto behaviour   Understanding inheritance in JavaScript Inheritance using prototype Inheritance using temporary constructor Creating own extend functions for inheritance Creating super in JavaScript Objects Shallow copy Objects deep copy Multiple Inheritance Parasitic Inheritance   Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4"
Php Training,"Installation and configuration Apache administration Virtual hosts and aliases Directory protection and CGI Apache Modules Common Apache Modules Apache Config files and variables Overwriting Config values using .htaccess file User webpages   Wamp Installation Wamp components Configuring Apache in Wamp Configuring PHP in Wamp MYSQL basic configuration Upgrading and downgrading versions in Wamp   Hands-on Session   Installing development environ with PHP, MySQL and Apache Post install configuration of PHP.ini file for enabling and disabling features Important tags in PHP.ini file Understanding httpd.conf file for fine tuning apache. Environmental security considerations on Unix/Linux Exercise and project   Defining arrays in PHP List Hashes Use of lists, arrays and hashes Extracting array elements in a loop Catching list elements in separate variables using split() and list() Extracting hash elements in loop using values() Extracting hash keys in a loop using keys() Extraction values and keys using value=>key syntax Serializing and un-serializing arrays and hashes Storing arrays in disk files and using later. Passing arrays as references and values to a function Array function: array_split, array_chunk, array_count_values, array_fill, array_key_exists, array_pop, array_push etc. Merging arrays   Basic Defining a PHP Class Constructor Default constructor and desconstructor in PHP 5 Public , Private and protected variables Including external class files Function Overloading Inheritance Example of class using a sample User class RequireÔÇØ, ÔÇ£includeÔÇØ and ÔÇ£include_onceÔÇØ   Hands-on Session   Auto loading class objects Using static keyword in classes Scope resolution Class Constant Abstract class concept and demo Interfaces concept and demo Object Iteration Patterns Magic Methods Using ""final"" keyword Object Cloning   Basics Pre-defined variable Variable Scope Using ""global"" keyword $GLOBALS   Writing user defined functions Many different ways to write PHP functions Passing arguments Returning values Returning Multiple Values Default parameters and precautions Filesystem : basename, copy, dirname, fopen, fread, fwrite, foef, fclose, fgets, file, filesize, fputs, is_dir, is_file, is_executable, stat Strings: trim, echo, explode, fprintf, implode, join, md5, str_word_count, strlen, substr, substr_replace, wordwrap HTTP: header, base64_encode, base64_decode, parse_url, urlencode, urldecode File upload: POST method uploads, error messages Mathematical functions: abs, sin, cos ,tan, pi, pow, min, max, log, log10, hexdec, exp, deg2rad, rad2deg, srand, rand, round, is_nan, is_infinite, is_finite, fmod, floor, ceil, sqrt   Writing user defined functions Many different ways to write PHP functions Passing arguments Returning values Returning Multiple Values Default parameters and precautions Filesystem : basename, copy, dirname, fopen, fread, fwrite, foef, fclose, fgets, file, filesize, fputs, is_dir, is_file, is_executable, stat Strings: trim, echo, explode, fprintf, implode, join, md5, str_word_count, strlen, substr, substr_replace, wordwrap HTTP: header, base64_encode, base64_decode, parse_url, urlencode, urldecode File upload: POST method uploads, error messages Mathematical functions: abs, sin, cos ,tan, pi, pow, min, max, log, log10, hexdec, exp, deg2rad, rad2deg, srand, rand, round, is_nan, is_infinite, is_finite, fmod, floor, ceil, sqrt   Understanding forms and input fields Reading form variables in PHP using POST method Reading from variables in PHP using GET method Carrying values from one page to another using QUERY_STRING PHP sessions and cookies   Concept of database abstraction Implementing a DB class with MYSQL example Making database queries using implementing DB class Changing DB class to work with SQLite   Understanding AJAX Using PHP with AJAX Using JavaScript to pass variables to PHP Using PHP to render JavaScript Demo of login from using PHP and AJAX Passing variables to PHP from JavaScript and Vs- an another approach using cookies   Implementing working SOAP client and server (using nuSOAP) Implementing working XML RPC client and server (using PEAR) Practice of web services by writing new working services.   Introduction to frameworks Introduction to MVC design pattern Working with controllers View Understanding Templating   Introduction to MVC design pattern Introduction to Laravel Understanding composer Installing Laravel Understanding Laravel directory structures Creating starter app using Laravel Working with database migrations Understanding controllers in Laravel Working with controllers Understanding views in Laravel Creating a view class Understanding models Creating a model class Working with blade templates Understanding Test Driven development Writing tests for Laravel Applications Creating a complete MVC flow with controller, view and model Understanding REST Services Implementing REST services in Laravel   Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4"
Drupal,"How Drupal began? What is Drupal 7? Drupal versions 5,6.Differences between them What Technology Does Drupal Use Drupal Architecture Drupal Content Management System Content Management Framework Web Application Framework   Modules Themes Nodes Blocks   Bootstrap Hooks and Callbacks Configuring WAMP for Drupal   Installing Drupal 7 The Admin Interface-Creating Content Managing Content Site Building Site Configuration User Management Reports Help   Core Required Core Optional-enabled Core Optional-disabled   What They Are Where They Are What They Do Downloading and Enabling Drupal Search, working with indexing and cron Popular Modules Module selection and evaluation   Job site setup   Blocks and Regions Default Blocks Custom Blocks Configuring Blocks Enabling Default Blocks and Controlling the Front Page   Download Methods File Module Image Module Storing user uploaded materials   The PAGE and the ARTICLE Creating Custom Content-Types Adding Fields to Content Types-Text Fields Adding Fields to Content Types-Contributed Module: Link Fields Adding Fields to Content Types-Contributed Module: Image Fields Adding Fields to Content Types-Contributed Module: Media Fields Adding Fields to Content Types-Contributed Module: : Field Groups Adding Fields to Content Types-Contributed Module: Node Reference Manage Display\xa0Settings-Teaser / Body Displays, Labels, Display Formats   What is taxonomy Vocabularies Required Vocabulary Controlled Vocabulary Terms Single and Multiple Terms Adding Terms View Content by Term Storing Taxonomies Module-Based Vocabularies Common Functions   Overview of VIEWS VIEW Types-Default Views VIEW Types-Override Views VIEW Types-Normal Views VIEW-Handler Displays-Basic Settings   Job Based site setup with job search,listing Displays-Display Types,Feed VIEW-Creation Basic Settings VIEW-Creation Fields vs Node VIEW-Creation Filters VIEW-Creation Arguments VIEW-Creation Relationships   Overview of Panels Panel Layouts Panel Pages   introduction to Solr search, installation   Solr integration to Drupal search. Panel and views, Arguments   Social Networking site setup with messaging,Instant messaging,profiles   Architecture of the Theme System Theme Templates The .info file Theme Engine Hooks Theme Creation Where are the files? Installing a Theme Creating and Enabling a Customized SubTheme Theme Inheritance and SubThemes Modifying a Base Theme Theming with a Custom Stylesheet Implementation Hierarchy of preprocess hooks Theme Preprocessors,hooks Overriding Theme Behavior with PHP   Networking site with Custom Theme and views Coding with hooks,\xa0Menu system, Permissions Working with Drupal Database API Creating a simple hello world module Form Processing Validation Form Submission Redirection Caching in Modules using inbuilt cache Creating Basic Forms Module Templates,Passing data to templates from modules   Drupal basic caching, block level caching, Using page boost, memcached   Introduction, installation and working with drush.   Deploying drupal applications, porting Working with nodeapi, form alter and other advanced hooks   HR portal setups   Introduction to Drupal 8 Drupal 8 vs Drupal 7 Drupal 8 Architecture Drupal 8 Admin Panel Understanding the drupal upgrade process Understanding YAML files Drupal 8 configuration process Drupal 8 Deployment Theme customization Theme development Module development Securing drupal site"
HTML5,"HTML5 History/Timeline HTML5 Design Principles What is (and is not) HTML5 HTML Review Doctype Root Element Element   Content Models New Structural Elements  HTML4/HTML5 Comparison Other New Elements Redefined Elements Obsolete Elements HTML5 Outlines When Can I Use It? Feature Detection: Techniques Feature Detection: Examples Feature Detection: Modernizr CSS Styling Validating Accessibility (WAI-ARIA)   HTML5 Forms Overview New Input Types: Contact Info New Input Types: Native Date Picking Operas Rendering of Date Input Types New Input Types: Number and Range New Attributes Detecting Support Accessibility (WAI-ARIA) Styling Form Elements Avoiding Validation The Constraint Validation API Custom Validation Example   Audio and Video Element Using the Media Elements Attributes Formats Serving Device-Specific Files Accessibility Backwards Compatibility Media API Rolling Custom Controls   Canvas Overview The Canvas Element The 2D Context The Coordinate System Rectangles Paths Paths, Drawing Methods Curves and Arcs Colors and Styles   Geolocation Overview Privacy Concerns API Methods API Attributes Using the Geolocation API:Success Handlers Using the Geolocation API: Error Handlers Using the Geolocation API: The Third Argument watchPosition() and clearWatch() Fallback Support: Geo.js   Local Data Storage Overview Web Storage Overview Web Storage API Data Types JSON (JavaScript Object Notation) Accessing Storage The Storage Event Database APIs   Web Workers Overview What Can You Do with a Worker? Message Passing Shared Workers: The Parent Page"
jQuery Ajax,"Jquery fundamentals Why we need Jquery Jquery alternatives   The document ready handler Making DOM elements Selecting elements for manipulation Using basic CSS selectors Using child, container, and attribute selectors Selecting by position searching elements in jquery Searching for parents and child elements Search and traversing elements Selecting child and parent elements Generating new HTML DOM manipulation using jquery Multiple DOM Manipulation functions Event handling in jquery Handling click,blur,submit and related events Event Delegation Introduction to Ajax Making get requests with $.ajax Making post requests Making rest requests   Understanding JSONP for cross domain requests Promises API Understanding promises and deferred object Creating asynchronous workflow with promises API Handling multiple request with $.deferred and promises Creating jquery plugins Optimizing jquery Security in Jquery Responding to model changes Working with inbuilt directives   Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4   Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4"
Linux,History. Difference Between Linux and Windows Difference Between Linux and Unix GNU Usage Career Options Interesting Facts about Linux Why Linux is Virus proof? Various Linux Distributions Pros and Cons   mkdir touch ls pwd cd chmod df du dd adduser sort passwd rm/rmdir date   Vi Editor   File Structure and hierarchy File Permissions LVM overview   cron at   RPM make   Boot Loaders (LILO and GRUB) System Initialization inittab rc.sysinit rc   Volume groups Physical and logical volumes Resizing LVs etc   route ifconfig ping netstat   modprobe rmmod insmod lsmod modinfo   ssh Sshd Scp   Single User Mode Rescue Mode IP Tables File Sharing with SAMBA NFS Mail Server using SENDMAIL Web Server installation (apache) Proxy Server installation using SQUID Firewalling using iptables PAM (plug gable Authentication modules) Linux Performance Monitor SAR utility. Monitor cpu using sar track Application causing Memory Leak   awk sed grep while for echo variables functions   lynis(Unix-based auditing tool) rootkit hunter.
AngularJS Training,"Introduction to AngularJS How AngularJS is opinionated AngularJS Components and Architecture   Creating Boundaries using ng-app Model View Controller Templates and Data Binding Repeating elements in templates Using Expressions, CSS Classes and Styles Using Controllers for UI responsibility separation Understanding Controllers Boundary and Scopes Scope inheritance in Controllers Responding to model changes Working with inbuilt directives   Filters Overview Understanding Filter Expressions Building custom Filters Implementing filters and custom filters in example Understanding Built-in Directives   Understanding routing in AngularJS Using ngRoute Module Creating routes Passing parameters to Routes   Creating a simple E-Commerce Front End Page using AngularJS.   Dependency Injection Services, Factories and providers Modularity using Services Injecting Services Creating Custom Factories and Providers Creating example using services   Directives Overview Creating Directives The Directive Definition Object Compilation and Linking Creating Components Implementing directives in the example app   Understanding server communicating with angular Communicating over $http Configuring the requests Sending Http Headers Caching Responses Request and Response Transformation   Working with get to fetch data Post, Put, Delete   Testing Models using Jasmine Creating Unit tests for AngularJS Components Using Protractor for end to end testing Creating End to End tests for AngularJS   Creating Advanced Routes using UI-Router Using local storage with AngularJS Scripts optimizations Securing AngularJS application   Introduction to Ionic framework Installation and configuring ionic Creating Apps using Ionic Using the ionic command line Deploying Sample Application using Ionic   Creating a simple Ionic application using AngularJS.   Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4"
.Net training,Web Programming Introduction Client server architecture   HTML Javascript In Body Of Document Javascript Event Handling Javascript Clientside Validation   Introduction to ASP.NET MVC   First MVC Web Application Views in MVC Application Adding Model in MVC Application   Controller and ActionResult Types Passing Data from View to Controller Action Selectors HttpGet and HttpPost Built in Action Filters Understanding Custom Action Filter User Agent Action Filter Example Asynchronous Controllers   Razor Introduction and Syntax Working with Layout Pages Partial Views Types of Views   Introducing HTML Helper Methods Binding Html Helpers to ViewData Binding HTML Helper to Model Display and Editor Helper Methods Custom Templates for Display and Editor Methods   Default Behaviour of Default Model Binder Bind Attribute   Introduction and Validating Model Data Remote and Custom Validation Attributes Custom Clientside Validations   Web Configuration File Custom Error Handling   What is a Cookie Cookies Example Understanding Sessions Login Example using Sessions Working with Session Properties Handling Global Data in an Web Application   Entity Framework and CRUD Operations Writing and Using Business Objects Writing and Using Generic Repository Caching in Repository Dependency Injection and Custom Controller Factory   URL Routing Routing Features in MVC5   Ajax Helper Methods   Bundling and Minification   Web API Introduction Simple Web API Example with jQuery Client CRUD Operations using WebAPI   Unit Testing a Class Unit Testing Controller in MVC   NTier Layered Architecture Part 1 NTier Layered Architecture Part 2   Sample Small Project
Software Testing,"What is Software Testing? Why is it important?   Waterfall model SDLC V model SDLC Agile Model SDLC   Types Of Requirements   What is Test Strategy? How to create an efficient Test Strategy?   Unit Testing Integration Testing Smoke Testing System Testing Regression Testing Acceptance Testing Black Box Testing White Box Testing   What are\xa0Test Cases? Functional Test case Performance Test case Security Test case UI Test case   Defect verification Defect Life Cycle Defect Reporting/tracking   Test Summary Test Report Preparation    What is Automation Testing and why it is important to learn Automation? Limitations of Manual Testing Limitations of Automation Testing What we need to Automate? What is Selenium and what kind of testing we can perform using selenium? Advantages of Selenium What is the difference between Selenium and QTP?   IDE Selenium-RC Selenium-Grid Selenium WebDriver/Selenium 2.0   What is Selenium IDE How to Install Selenium IDE Recording and playback using Selenium IDE IDE Context Menu Actions, Accessors, Assertion in Selenium IDE Verify in Selenium IDE Difference between assert and verify in Selenium IDE How to add a comment in Selenium IDE How to create a test case and save the test case in selenium IDE Creating test suites in selenium IDE How to import test case and test suites in Selenium IDE How to take screenshots in Selenium IDE Limitations of Selenium IDE Important Selenium IDE command Open click/clickAndWait type/typeKeys verifyTitle/assertTitle verifyTextPresent verifyElementPresent verifyTable waitForPageToLoad waitForElementPresent goBack pause captureEntirePageScreenshotAndWait   Tools to identify elements/objects Firebug What is XPath and how to locate element using XPath How to locate element using CSS Advantage or disadvantage of using XPath over CSS How to locate elements by ID How to locate elements by name How to locate elements by link text   Use Of Selenium WebDriver in the industry What is difference between Selenium RC and Selenium WebDriver How to configure Selenium WebDriver in eclipse Which all browser we can automate using Selenium WebDriver How to create a script in Selenium WebDriver How to automate a form using Selenium WebDriver How to find a broken link in your application using Selenium Webdriver How to automate an alert using Selenium WebDriver How to automate a checkbox using Selenium WebDriver How to automate a dropdown using selenium Webdriver How to automate a frame using Selenium WebDriver How to give implicit and explicit Wait in Selenium WebDriver How to Capture Screenshots in Selenium Webdriver Limitations of Selenium WebDriver   What is TestNG Framework and Why TestNG is used How TestNG makes automation easy Advantage of using TestNG over JUnit How to install TestNG in eclipse Annotations in TestNG Creating a running a simple test script using TestNG How to prioritize the execution of tests in the TestNG Hard and Soft Assertions in TestNG How to create testng.xml file How to execute multiple test cases using testng.xml How to create a test suite using testng.xml Advantage of testng.xml file How to perform cross browser testing using TestNG Generating the test reports using TestNG   Including the Poi Jar files in the project Write a java program to read the data from excel sheet   How to create properties file in java How to read a data from the properties file   Why AutoIt is used with selenium Download AutoIt How to check the help section in AutoIt How to use finder tool in AutoIt How to create an AutoIt script How to integrate AutoIt with selenium Important methods used in AutoIt   Why Maven with selenium How to configure Maven in Eclipse How to create a build in Maven How to execute a build in Maven How to analyze the reports using Maven   Why Jenkins with selenium Download and Install Jenkins Configure Jenkins Create a batch file Execute Jenkins Job   Downloading and configuring GitHub Basic Git commands Working with repository Creating a repository Committing and syncing the code Reverting and rolling back the code Resolving the conflicts   Installing Java, Installing Eclipse Features of Java, Why Java for Selenium First Java program, Data types in Java String class , if statements Conditional and concatenation operators While Loop, For Loops Practical Examples with loops , Usage of loops in Selenium Creating Objects in Java , Local Variables Global Variables , OOPS concept , Constructors Concept of Inheritance and working Example Interface and Overloading and Overriding Functions Accessing modifiers\xa0 Public, Private, Default, Protected ÔÇô Exception handling in java   Data Driven FrameWork KeyWord Driven FrameWork Hybrid FrameWork Difference between Data Driven, Keyword driven and Hybrid framework What is Object repository in a selenium framework   Design keyword driven framework for our staging.zenrays.com website"
Manual Testing,What is Software Testing? Why is it important?   Waterfall model SDLC V model SDLC Agile Model SDLC   Types Of Requirements   What is Test Strategy? How to create an efficient Test Strategy?   Unit Testing Integration Testing Smoke Testing System Testing Regression Testing Acceptance Testing Black Box Testing White Box Testing   What are\xa0Test Cases? Functional Test case Performance Test case Security Test case UI Test case   Defect verification Defect Life Cycle Defect Reporting/tracking   Test Summary Test Report Preparation
Automation,"What is Automation Testing and why it is important to learn Automation? Limitations of Manual Testing Limitations of Automation Testing What we need to Automate? What is Selenium and what kind of testing we can perform using selenium? Advantages of Selenium What is the difference between Selenium and QTP?   IDE Selenium-RC Selenium-Grid Selenium WebDriver/Selenium 2.0   What is Selenium IDE How to Install Selenium IDE Recording and playback using Selenium IDE IDE Context Menu Actions, Accessors, Assertion in Selenium IDE Verify in Selenium IDE Difference between assert and verify in Selenium IDE How to add a comment in Selenium IDE How to create a test case and save the test case in selenium IDE Creating test suites in selenium IDE How to import test case and test suites in Selenium IDE How to take screenshots in Selenium IDE Limitations of Selenium IDE Important Selenium IDE command Open click/clickAndWait type/typeKeys verifyTitle/assertTitle verifyTextPresent verifyElementPresent verifyTable waitForPageToLoad waitForElementPresent goBack pause captureEntirePageScreenshotAndWait   Tools to identify elements/objects Firebug What is XPath and how to locate element using XPath How to locate element using CSS Advantage or disadvantage of using XPath over CSS How to locate elements by ID How to locate elements by name How to locate elements by link text   Use Of Selenium WebDriver in the industry What is difference between Selenium RC and Selenium WebDriver How to configure Selenium WebDriver in eclipse Which all browser we can automate using Selenium WebDriver How to create a script in Selenium WebDriver How to automate a form using Selenium WebDriver How to find a broken link in your application using Selenium Webdriver How to automate an alert using Selenium WebDriver How to automate a checkbox using Selenium WebDriver How to automate a dropdown using selenium Webdriver How to automate a frame using Selenium WebDriver How to give implicit and explicit Wait in Selenium WebDriver How to Capture Screenshots in Selenium Webdriver Limitations of Selenium WebDriver   What is TestNG Framework and Why TestNG is used How TestNG makes automation easy Advantage of using TestNG over JUnit How to install TestNG in eclipse Annotations in TestNG Creating a running a simple test script using TestNG How to prioritize the execution of tests in the TestNG Hard and Soft Assertions in TestNG How to create testng.xml file How to execute multiple test cases using testng.xml How to create a test suite using testng.xml Advantage of testng.xml file How to perform cross browser testing using TestNG Generating the test reports using TestNG   Including the Poi Jar files in the project Write a java program to read the data from excel sheet   How to create properties file in java How to read a data from the properties file   Why AutoIt is used with selenium Download AutoIt How to check the help section in AutoIt How to use finder tool in AutoIt How to create an AutoIt script How to integrate AutoIt with selenium Important methods used in AutoIt   Why Maven with selenium How to configure Maven in Eclipse How to create a build in Maven How to execute a build in Maven How to analyze the reports using Maven   Why Jenkins with selenium Download and Install Jenkins Configure Jenkins Create a batch file Execute Jenkins Job   Downloading and configuring GitHub Basic Git commands Working with repository Creating a repository Committing and syncing the code Reverting and rolling back the code Resolving the conflicts   Installing Java, Installing Eclipse Features of Java, Why Java for Selenium First Java program, Data types in Java String class , if statements Conditional and concatenation operators While Loop, For Loops Practical Examples with loops , Usage of loops in Selenium Creating Objects in Java , Local Variables Global Variables , OOPS concept , Constructors Concept of Inheritance and working Example Interface and Overloading and Overriding Functions Accessing modifiers\xa0 Public, Private, Default, Protected ÔÇô Exception handling in java   Data Driven FrameWork KeyWord Driven FrameWork Hybrid FrameWork Difference between Data Driven, Keyword driven and Hybrid framework What is Object repository in a selenium framework   Design keyword driven framework for our staging.zenrays.com website"
Vue.JS Training,Getting Started Using VueJS to Interact with the DOM Using Conditionals and Rendering Lists First Course Project\u200a—\u200aThe Monster Slayer Understanding the VueJS Instance Moving to a “Real” Development Workflow with Webpack and Vue CLI An Introduction to Components Communicating between Components Advanced Component Usage Second Course Project\u200a—\u200aWonderful Quotes Handling User Input with Forms Using and Creating Directives Improving your App with Filters and Mixins Adding Animations and Transitions Connecting to Servers via Http\u200a—\u200aUsing vue-resource Routing in a VueJS Application Better State Management with Vuex Final Project\u200a—\u200aThe Stock Trader Deploying a VueJS Application Course Roundup
Advance Java,"Java OOPS concepts, need for Java Classes and interfaces Objects, Constructor, fields, methods, variables, keywords Inheritance, method overloading and overriding, access specifiers jar file, javadoc api creation Package, comparing and printing objects final variable and initializing Bitwise operations, operators, data types Generic types, Date, Calendar, Joda Inner, anonymous classes String, String Buffer, Regular Expressions, arrays, switch statement Exception, Reflection, Clone, Assertion File Handling, io package classes Enum type Multi-threading, concurrency Data structures, Collection framework, sorting   JDBC, SQL, database concepts, drivers   Sockets, remote communication Servlets, Webserver, http methods RMI, networking JavaServer Pages(JSP), JSTL Java Cryptography, encryption Java mail, cryptographic protocols JMS XML   CSpring Framework, IoC, Dependency Injection Spring Containers : BeanFactory, ApplicationContext XmlBeanFactory, ClassPathXmlApplicationContext,FileSystemXmlApplicationContext Spring scope : singleton and prototype Bean Life Cycle : setup and tear down, init-method and destroy-method BeanPostProcessor Spring Bean definition inheritance Dependency Injection: Through Constructor, setter method Injecting Collection, inner bean Bean Autowiring: by name, by type, by constructor Annotation : Injection required true/false Autowiring : setter, property, constructor, qualifier, Component, life cycle Spring Wiring, loose coupling    JDBCTemplate ÔÇô update, queryForObject PreparedStatementCreator PreparedStatementSetter DataSource    Advices: Before, After returning, After throwing, Around   Practical Session   Model-Vew-Controller Controller, command class, validator FormController ExceptionResolver, ViewResolver MVC annotations: @Controller, @RequestMapping, @ExceptionHandler   ORM, JDBC to hibernate transition, POJO to DB mapping Hibernate Config file, class annotation , associations Persistence Session, SessionFactory, Transaction Spring and Hibernate   Java Persistence API Entities Primary Key, Persistent Fields in Entities Entity Inheritance Entity Manager Managing Entities JPQL   Practical Session"
NodeJS,Introduction what is NodeJS Importance of being asynchronous Asynchronous Javascript NodeJS event loop NodeJS process file system FS module Reading directories Reading Files Streaming Building servers Creating servers with HTTP Receiving data HTTP streaming Working with TCP CommonJS Modules npm Packages The EventEmitter API   Introduction to ExpressJS Routing Configuration Views Middleware Working With Data Working With Socket.io Processes and cluster Child Process Module Why clusters The cluster object The worker object Best Practices NPM Node.js API design Error Handling Debugging Hosting Node Why do we need hosts Forever PM2 Node on Windows Node as a Windows Service IISNode Unit Testing   Mock Interview 1  Mock Interview 2 Mock Interview 3 Mock Interview 4